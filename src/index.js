//–¢–µ—Ö –∑–∞–¥–∞–Ω–∏–µ +++++++++++++++++++++++++++++
// –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–ª–æ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—Ç—Ä–∞–Ω—ã,
// —Ç–∞–∫–∏–µ –∫–∞–∫ `Sudan`, –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ—Å–∫–æ–ª—å–∫—É –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã —è–≤–ª—è–µ—Ç—Å—è
// —á–∞—Å—Ç—å—é –Ω–∞–∑–≤–∞–Ω–∏—è –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω—ã, `South Sudan`. –ù–µ –Ω—É–∂–Ω–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è –æ–± —ç—Ç–∏—Ö
// –∏—Å–∫–ª—é—á–µ–Ω–∏—è—Ö.

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π. –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –≤
// —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ.

// ‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï!** HTTP-–∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –±–µ–∫–µ–Ω–¥ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –Ω–µ –ø–æ —Å–∞–±–º–∏—Ç—É —Ñ–æ—Ä–º—ã, —Ñ–æ—Ä–º—ã
// –Ω–µ—Ç, –∞ –ø—Ä–∏ –Ω–∞–±–æ—Ä–µ –∏–º–µ–Ω–∏ —Å—Ç—Ä–∞–Ω—ã –≤ –∏–Ω–ø—É—Ç–µ, —Ç–æ –µ—Å—Ç—å –ø–æ —Å–æ–±—ã—Ç–∏—é `input`. –ù–æ –¥–µ–ª–∞—Ç—å
// HTTP-–∑–∞–ø—Ä–æ—Å –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –∫–ª–∞–≤–∏—à–∏ –Ω–µ–ª—å–∑—è, —Ç–∞–∫ –∫–∞–∫ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è
// –º–Ω–æ–≥–æ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–º –ø–æ—Ä—è–¥–∫–µ (race
// conditions). –ü–æ—ç—Ç–æ–º—É –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –ø–æ–¥—Ö–æ–¥
// `debounce` –∏ –¥–µ–ª–∞—Ç—å HTTP-–∑–∞–ø—Ä–æ—Å —Å–ø—É—Å—Ç—è `500–º—Å` –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
// –ø–µ—Ä–µ—Å—Ç–∞–ª –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç. –ò—Å–ø–æ–ª—å–∑—É–π npm-–ø–∞–∫–µ—Ç
// [lodash.debounce](https://www.npmjs.com/package/lodash.debounce).

// –ï—Å–ª–∏ –±–µ–∫–µ–Ω–¥ –≤–µ—Ä–Ω—É–ª –±–æ–ª—å—à–µ —á–µ–º 10 —Å—Ç—Ä–∞–Ω –ø–æ–¥–æ—à–µ–¥—à–∏—Ö –ø–æ–¥ –∫—Ä–∏—Ç–µ—Ä–∏–π –≤–≤–µ–¥–µ–Ω–Ω—ã–π
// –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ —Ç–æ–º, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
// —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º. –î–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π –ø–ª–∞–≥–∏–Ω
// [pnotify](https://github.com/sciactive/pnotify).

// ![–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ](assets/query-prompt.png)

// –ï—Å–ª–∏ –±–µ–∫–µ–Ω–¥ –≤–µ—Ä–Ω—É–ª –æ—Ç 2-—Ö –¥–æ 10-—Ö —Å—Ç—Ä–∞–Ω, –ø–æ–¥ –∏–Ω–ø—É—Ç–æ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω
// –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω.

// ![—Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω](assets/country-list.png)

// –ï—Å–ª–∏ –±–µ–∫–µ–Ω–¥ –≤–µ—Ä–Ω—É–ª –º–∞—Å—Å–∏–≤ —Å –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–æ–π, –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è —Ä–∞–∑–º–µ—Ç–∫–∞ —Å
// –¥–∞–Ω–Ω—ã–º–∏ –æ —Å—Ç—Ä–∞–Ω–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å—Ç–æ–ª–∏—Ü–∞, –Ω–∞—Å–µ–ª–µ–Ω–∏–µ, —è–∑—ã–∫–∏ –∏ —Ñ–ª–∞–≥.

// ![–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–µ](assets/country-info.png)

//=======================================
import style from './sass/main.scss';
//–∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö —Å –±–µ–∫—ç–Ω–¥–∞
import fetchCountries from './js/fetchCountries';
// —É—Ä–µ–∑–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ 
import debounce from 'lodash.debounce';
// –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
import {
  alert,
  defaultModules,
} from '../node_modules/@pnotify/core/dist/PNotify.js';
import * as PNotifyMobile from '../node_modules/@pnotify/mobile/dist/PNotifyMobile.js';
defaultModules.set(PNotifyMobile, {});
// —Å—Ç–∏–ª–∏ –¥–ª—è –±–∏–±–ª–∏—Ç–µ–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
import '@pnotify/core/dist/Material.css';

const input = document.querySelector('.input-js');
let list = document.querySelector('.list-js');

input.addEventListener('input', debounce(onSearch, 1000));

function onSearch() {
    list.innerHTML = '';
    const searchQuery = input.value;
    const fetchQuery = fetchCountries(searchQuery);

  fetchQuery
    .then(data => {
      if (data.length >= 10) {
        alert({
          text: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º',
          styling: 'material',
          type: 'notice',
          mode: 'dark',
          delay: 3000,
        });
        return;
      }

      fetchQuery.then(data => {
        if (data.length === 1) {
          data.map(e =>
            list.insertAdjacentHTML(
              'beforeend',
              `<img src="${e.flags.png}" alt="${e.flags.alt}" width="350px">
            <div>
                <li class="js-li"> –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ - ${e.name.common} </li>
                <li class="js-li"> –°—Ç–æ–ª–∏—Ü–∞ - ${e.capital} </li>
                <li class="js-li"> –§–ª–∞–≥ - ${e.flag} </li>
                <li class="js-li"> –ù–∞—Å–µ–ª–µ–Ω–∏–µ - ${e.population} </li> 
            </div>`,
            ),
          );
          alert({
            text: `–í–æ—Ç —á—Ç–æ –º—ã –Ω–∞—à–ª–∏ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É`,
            styling: 'material',
            type: 'notice',
            mode: 'dark',
            delay: 1000,
          });
        } else {
          fetchQuery.then(data =>
            data.map(e =>
              list.insertAdjacentHTML(
                'beforeend',
                `<div>
              <li class="js-li">
              ${e.name.common} ${e.flag} 
              </li>
              </div>`,
              ),
            ),
          );

          alert({
            text: '–í—ã–±–µ—Ä–µ—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏–∑ —Å–ø–∏—Å–∫–∞',
            styling: 'material',
            type: 'info',
            delay: 1000,
          });
        }
      });
    })
    .catch(error =>
      alert({
        text: `–£–ø—Å ,—á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ü•¥ ${error}`,
        styling: 'material',
        type: 'error',
        mode: 'dark',
        delay: 500,
      
      }),
    );
};